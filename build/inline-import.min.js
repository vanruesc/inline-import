/**
 * inline-import v0.0.5 build Aug 18 2017
 * https://github.com/vanruesc/inline-import
 * Copyright 2017 Raoul van RÃ¼schen, Zlib
 */

"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}function checkFile(e){fs.access(settings.file,fs.R_OK|fs.W_OK,e)}function readFile(e){fs.readFile(settings.file,settings.encoding,e)}function parseImports(e,t){for(var n=[],i=importRegExp.exec(e);null!==i;)n.push(new FileImport(i.index,importRegExp.lastIndex,i[1],path.resolve(path.dirname(settings.file),i[2]),settings.extensions[path.extname(i[2])])),i=importRegExp.exec(e);t(null,n,e)}function filterImports(e,t,n){var i=[],s=void 0,r=void 0;for(s=0,r=e.length;s<r;++s)void 0!==e[s].encoding&&i.push(e[s]);n(null,i,t)}function checkImports(e,t,n){var i=0,s=e.length;!function r(a){a||i===s?n(a,e,t):fs.access(e[i++].path,fs.R_OK|fs.W_OK,r)}()}function readImports(e,t,n){var i=void 0,s=-1,r=e.length;!function a(l,o){i=s,l||++s===r?(r>0&&(e[i].data=o),n(l,e,t)):(s>0&&(e[i].data=o),fs.readFile(e[s].path,e[s].encoding,a))}()}function inlineImports(e,t,n){for(var i=e.length>0,s=void 0;e.length>0;)s=e.pop(),t=t.substring(0,s.start)+settings.declaration+" "+s.name+" = "+JSON.stringify(s.data)+t.substring(s.end);n(null,i,t)}function writeFile(e,t,n){e?fs.writeFile(settings.file,t,n):n(null)}var waterfall=_interopDefault(require("async-waterfall")),path=_interopDefault(require("path")),fs=_interopDefault(require("fs")),classCallCheck=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),FileImport=function e(t,n,i,s,r){var a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null;classCallCheck(this,e),this.start=t,this.end=n,this.name=i,this.path=s,this.encoding=r,this.data=a},Settings=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};classCallCheck(this,e),this.file=t,this.encoding=void 0!==n.encoding?n.encoding:"utf8",this.extensions=void 0!==n.extensions?n.extensions:null,this.declaration=void 0!==n.useVar&&n.useVar?"var":"const"},importRegExp=/import\s*(\w*)\s*from\s*["'](.*)["']/gi,settings=null,InlineImport=function(){function e(){classCallCheck(this,e)}return createClass(e,null,[{key:"transform",value:function(e,t,n){settings=new Settings(e,t),waterfall([checkFile,readFile,parseImports,filterImports,checkImports,readImports,inlineImports,writeFile],n)}}]),e}();module.exports=InlineImport;