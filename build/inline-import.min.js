/**
 * inline-import v0.0.0 build May 12 2017
 * https://github.com/vanruesc/inline-import
 * Copyright 2017 Raoul van RÃ¼schen, Zlib
 */

"use strict";function _interopDefault(a){return a&&"object"==typeof a&&"default"in a?a.default:a}function checkFile(a){fs.access(settings.file,fs.R_OK|fs.W_OK,a)}function readFile(a){fs.readFile(settings.file,settings.encoding,a)}function parseImports(a,b){for(var c=[],d=importRegExp.exec(a);null!==d;)c.push(new FileImport(d.index,importRegExp.lastIndex,d[1],path.resolve(path.dirname(settings.file),d[2]),settings.extensions[path.extname(d[2])])),d=importRegExp.exec(a);b(null,c,a)}function filterImports(a,b,c){var d=[],e=void 0,f=void 0;for(e=0,f=a.length;e<f;++e)void 0!==a[e].encoding&&d.push(a[e]);c(null,d,b)}function checkImports(a,b,c){var d=0,e=a.length;!function f(g){g||d===e?c(g,a,b):fs.access(a[d++].path,fs.R_OK|fs.W_OK,f)}()}function readImports(a,b,c){var d=void 0,e=-1,f=a.length;!function g(h,i){d=e,h||++e===f?(f>0&&(a[d].data=i),c(h,a,b)):(e>0&&(a[d].data=i),fs.readFile(a[e].path,a[e].encoding,g))}()}function inlineImports(a,b,c){for(var d=a.length>0,e=void 0;a.length>0;)e=a.pop(),b=b.substring(0,e.start)+settings.declaration+" "+e.name+" = "+JSON.stringify(e.data)+b.substring(e.end);c(null,d,b)}function writeFile(a,b,c){a?fs.writeFile(settings.file,b,c):c(null)}var waterfall=_interopDefault(require("async-waterfall")),path=_interopDefault(require("path")),fs=_interopDefault(require("fs")),classCallCheck=function(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")},createClass=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),FileImport=function a(b,c,d,e,f){var g=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null;classCallCheck(this,a),this.start=b,this.end=c,this.name=d,this.path=e,this.encoding=f,this.data=g},Settings=function a(b){var c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};classCallCheck(this,a),this.file=b,this.encoding=void 0!==c.encoding?c.encoding:"utf8",this.extensions=void 0!==c.extensions?c.extensions:null,this.declaration=void 0!==c.useVar&&c.useVar?"var":"const"},importRegExp=/import\s*(\w*)\s*from\s*[\"\'](.*)[\"\']/gi,settings=null,InlineImport=function(){function a(){classCallCheck(this,a)}return createClass(a,null,[{key:"transform",value:function(a,b,c){settings=new Settings(a,b),waterfall([checkFile,readFile,parseImports,filterImports,checkImports,readImports,inlineImports,writeFile],c)}}]),a}();module.exports=InlineImport;